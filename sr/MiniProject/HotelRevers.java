/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package MiniProject;

import chap9.MySQLDB;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.util.ArrayList;
import java.util.Objects;

/**
 * @author LENOVO
 */
public class HotelRevers extends javax.swing.JFrame {
    DefaultTableModel model;
    MySQLDB myDB;

    /**
     * Creates new form HotelRevers
     */
    public HotelRevers() {
        initComponents();
        model = (DefaultTableModel) tblData.getModel();
        myDB = new MySQLDB();
        HotelRe ht;
        loadStudentData();


    }

    void loadStudentData() {
        try {
//            System.out.println("Hello");
            String sql = "SELECT * FROM `hotelrevers`";
            ArrayList<HotelRe> List = myDB.selectQuery3(sql);
            for (HotelRe i : List
            ) {
                String[] rowData = {String.valueOf(i.getId()), i.getName(), i.getSurname(), i.getType(), i.getWeeks(), String.valueOf(i.getDays()), String.valueOf(i.getTotal())};
//                String[] rowData = {id, name, surname};
                model.addRow(rowData);
                tblData.setModel(model);
            }

        } catch (Exception e) {
            System.out.println("5555555" + e.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblData = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        txtName2 = new javax.swing.JTextField();
        txtSurname2 = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        rdoSuperior = new javax.swing.JRadioButton();
        rdoDeluxe = new javax.swing.JRadioButton();
        rdoGrandDeluxe = new javax.swing.JRadioButton();
        rdoJuniorSuit = new javax.swing.JRadioButton();
        rdoGrandFamilySuite = new javax.swing.JRadioButton();
        rdoFamilyJuniorSuit = new javax.swing.JRadioButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        btnExit1 = new javax.swing.JButton();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        spnDays = new javax.swing.JSpinner();
        jScrollPane2 = new javax.swing.JScrollPane();
        tarResult = new javax.swing.JTextArea();
        cbxWeek = new javax.swing.JComboBox<>();
        btnAdd = new javax.swing.JButton();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 102, 0));
        jLabel4.setText("คำนวณค่าที่พัก");

        tblData.setBackground(new java.awt.Color(213, 247, 213));
        tblData.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][]{

                },
                new String[]{
                        "ID", "Name ", "Surname", "Room Type", "Period", "Days", "Total Price"
                }
        ));
        tblData.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDataMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblData);

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Customer Profile", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 24))); // NOI18N

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel5.setText(" ID :");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel6.setText(" Name :");

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel17.setText(" Surname :");

        txtId.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        txtId.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtIdKeyTyped(evt);
            }
        });

        txtName2.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        txtName2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtName2KeyTyped(evt);
            }
        });

        txtSurname2.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        txtSurname2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtSurname2KeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
                jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(29, 29, 29)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel17)
                                        .addComponent(jLabel6)
                                        .addComponent(jLabel5))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(txtId, javax.swing.GroupLayout.DEFAULT_SIZE, 259, Short.MAX_VALUE)
                                        .addComponent(txtName2)
                                        .addComponent(txtSurname2))
                                .addContainerGap(65, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
                jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(25, 25, 25)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel5)
                                        .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(28, 28, 28)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel6)
                                        .addComponent(txtName2, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(28, 28, 28)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel17)
                                        .addComponent(txtSurname2, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(24, Short.MAX_VALUE))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "ประเภทห้องพัก", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 24))); // NOI18N

        rdoSuperior.setBackground(new java.awt.Color(204, 255, 255));
        buttonGroup1.add(rdoSuperior);
        rdoSuperior.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        rdoSuperior.setText("Superior");

        rdoDeluxe.setBackground(new java.awt.Color(204, 255, 255));
        buttonGroup1.add(rdoDeluxe);
        rdoDeluxe.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        rdoDeluxe.setText("Deluxe");

        rdoGrandDeluxe.setBackground(new java.awt.Color(204, 255, 255));
        buttonGroup1.add(rdoGrandDeluxe);
        rdoGrandDeluxe.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        rdoGrandDeluxe.setText("Grand Deluxe");

        rdoJuniorSuit.setBackground(new java.awt.Color(204, 255, 255));
        buttonGroup1.add(rdoJuniorSuit);
        rdoJuniorSuit.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        rdoJuniorSuit.setText("Junior Suit");

        rdoGrandFamilySuite.setBackground(new java.awt.Color(204, 255, 255));
        buttonGroup1.add(rdoGrandFamilySuite);
        rdoGrandFamilySuite.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        rdoGrandFamilySuite.setText("Grand Family Suite");

        rdoFamilyJuniorSuit.setBackground(new java.awt.Color(204, 255, 255));
        buttonGroup1.add(rdoFamilyJuniorSuit);
        rdoFamilyJuniorSuit.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        rdoFamilyJuniorSuit.setText("Family Junior Suit");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
                jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(rdoGrandDeluxe)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(rdoDeluxe)
                                                        .addComponent(rdoSuperior))
                                                .addGap(36, 36, 36)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(rdoGrandFamilySuite)
                                        .addComponent(rdoJuniorSuit)
                                        .addComponent(rdoFamilyJuniorSuit))
                                .addGap(19, 19, 19))
        );
        jPanel5Layout.setVerticalGroup(
                jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(37, 37, 37)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(jPanel5Layout.createSequentialGroup()
                                                .addComponent(rdoJuniorSuit)
                                                .addGap(18, 18, 18)
                                                .addComponent(rdoFamilyJuniorSuit)
                                                .addGap(18, 18, 18)
                                                .addComponent(rdoGrandFamilySuite))
                                        .addGroup(jPanel5Layout.createSequentialGroup()
                                                .addComponent(rdoSuperior)
                                                .addGap(18, 18, 18)
                                                .addComponent(rdoDeluxe)
                                                .addGap(18, 18, 18)
                                                .addComponent(rdoGrandDeluxe)))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnUpdate.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnClear.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        btnExit1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnExit1.setText("Exit");
        btnExit1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExit1ActionPerformed(evt);
            }
        });

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel18.setText("ช่วงที่เข้าพัก");

        jLabel19.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel19.setText("วัน");

        jLabel20.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel20.setText("จำนวนวันเข้าพัก");

        jLabel21.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(255, 102, 0));
        jLabel21.setText("ผลการคำนวณ");

        spnDays.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        spnDays.setModel(new javax.swing.SpinnerNumberModel(0, 0, 366, 1));
        spnDays.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                spnDaysKeyTyped(evt);
            }
        });

        tarResult.setEditable(false);
        tarResult.setColumns(20);
        tarResult.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        tarResult.setRows(5);
        jScrollPane2.setViewportView(tarResult);

        cbxWeek.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        cbxWeek.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"Choose a period of stay", "Weekday (Sun - Thu)", "Weekend (Fri - Sat)", "Long Weekend"}));

        btnAdd.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel4)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(layout.createSequentialGroup()
                                .addGap(71, 71, 71)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 895, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(57, 57, 57)
                                                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addContainerGap(264, Short.MAX_VALUE))
                        .addGroup(layout.createSequentialGroup()
                                .addGap(124, 124, 124)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addComponent(jLabel20)
                                                                .addGap(33, 33, 33)
                                                                .addComponent(spnDays, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                                .addComponent(jLabel19)
                                                                .addGap(83, 83, 83)
                                                                .addComponent(jLabel21))
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addComponent(jLabel18)
                                                                .addGap(31, 31, 31)
                                                                .addComponent(cbxWeek, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                .addContainerGap(585, Short.MAX_VALUE))
                                        .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(btnExit1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                                        .addComponent(btnDelete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                        .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                .addGap(18, 18, 18)
                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addComponent(btnUpdate)
                                                                        .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 467, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(288, 288, 288))))
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGap(31, 31, 31)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(24, 24, 24)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(27, 27, 27)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel18)
                                        .addComponent(cbxWeek, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(spnDays, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jLabel20)
                                                .addComponent(jLabel19))
                                        .addComponent(jLabel21, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(btnAdd)
                                                        .addComponent(btnUpdate))
                                                .addGap(18, 18, 18)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(btnDelete)
                                                        .addComponent(btnClear))
                                                .addGap(18, 18, 18)
                                                .addComponent(btnExit1)))
                                .addContainerGap(130, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>

    private void tblDataMouseClicked(java.awt.event.MouseEvent evt) {
        int row = tblData.getSelectedRow();
        if (row >= 0) {
            String id = (String) tblData.getValueAt(row, 0);
            String name = (String) tblData.getValueAt(row, 1);
            String surname = (String) tblData.getValueAt(row, 2);
            String Type = (String) tblData.getValueAt(row, 3);
            String weeks = (String) tblData.getValueAt(row, 4);
            String days = (String) tblData.getValueAt(row, 5);
            String total = (String) tblData.getValueAt(row, 6);
            txtId.setText(id);
            txtName2.setText(name);
            txtSurname2.setText(surname);
            System.out.println(days);
            spnDays.setValue(Integer.parseInt(days));
            System.out.println(Type);
            if (Integer.parseInt(days) > 0) {

                if (Objects.equals(Type, "Superior")) {
                    rdoSuperior.setSelected(true);
                } else if (Objects.equals(Type, "Deluxe")) {
                    rdoDeluxe.setSelected(true);
                } else if (Objects.equals(Type, "Grand Deluxe")) {
                    rdoGrandDeluxe.setSelected(true);
                } else if (Type == "Junior Suit") {
                    rdoJuniorSuit.setSelected(true);
                } else if (Objects.equals(Type, "Family Junior Suit")) {
                    rdoFamilyJuniorSuit.setSelected(true);
                } else if (Objects.equals(Type, "Grand Family Suite")) {
                    rdoGrandFamilySuite.setSelected(true);

                }
                switch (Type) {
                    case "Superior":
                        rdoSuperior.setSelected(true);
                        break;
                    case "Deluxe":
                        rdoDeluxe.setSelected(true);

                        break;
                    case "Grand Deluxe":
                        rdoGrandDeluxe.setSelected(true);

                        break;
                    case "Junior Suit":
                        rdoJuniorSuit.setSelected(true);
                        break;
                    case "Family Junior Suit":
                        rdoFamilyJuniorSuit.setSelected(true);
                        break;
                    case "Grand Family Suite":
                        rdoGrandFamilySuite.setSelected(true);
                        break;

                }

            } else {
                System.out.println(" ");
            }
            if (Integer.parseInt(total) > 0) {


                if (Objects.equals(weeks, "Weekday (Sun - Thu)")) {
                    cbxWeek.setSelectedIndex(1);
                } else if (Objects.equals(weeks, "Weekend (Fri - Sat)")) {
                    cbxWeek.setSelectedIndex(2);

                } else if (Objects.equals(weeks, "Long Weekend")) {
                    cbxWeek.setSelectedIndex(3);
                }

                switch (weeks) {
                    case "Weekday (Sun - Thu)":
                        cbxWeek.setSelectedIndex(1);
                        break;
                    case "Weekend (Fri - Sat)":
                        cbxWeek.setSelectedIndex(2);
                        break;
                    case "Long Weekend":
                        cbxWeek.setSelectedIndex(3);
                        break;
                }
            } else {
                System.out.println(" ");
            }

        }
    }{}

    private void txtIdKeyTyped(java.awt.event.KeyEvent evt) {
        char c = evt.getKeyChar();
        if (!((c >= '0') && (c <= '9')
                || (c == java.awt.event.KeyEvent.VK_BACK_SPACE)
                || (c == java.awt.event.KeyEvent.VK_DELETE))) {
            getToolkit().beep();
            evt.consume();
        }
    }

    private void txtName2KeyTyped(java.awt.event.KeyEvent evt) {

    }

    private void txtSurname2KeyTyped(java.awt.event.KeyEvent evt) {

    }

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {
        int select = 0, days_upd;
        String id, type_upd, surname_upd, name_upd, week_upd;

        if (tblData.getSelectedRow() >= 0) {
            int price = 0;
            select = tblData.getSelectedRow();
            type_upd = "";
            id = tblData.getValueAt(select, 0).toString();
            name_upd = txtName2.getText();
            surname_upd = txtSurname2.getText();
            week_upd = (String) cbxWeek.getSelectedItem();
            days_upd = (int) spnDays.getValue();
            if (id.length() > 0 && name_upd.length() > 0 && surname_upd.length() > 0 && days_upd != 0
                    && cbxWeek.getSelectedIndex() != 0 && buttonGroup1.getSelection() != null) {
                if (rdoSuperior.isSelected()) {
                    type_upd = "Superior";
                    if (week_upd == "Weekday (Sun - Thu)") {
                        price = 2090;
                    } else if (week_upd == "Weekend (Fri - Sat)") {
                        price = 2490;
                    } else if (week_upd == "Long Weekend") {//LongWeekend
                        price = 3390;
                    } else {
                        price = 0;

                    }
                    int total = price * days_upd;
                    String sql = "UPDATE `hotelrevers` SET `name` = '" + name_upd + "', `surname` = '" + surname_upd + "',`type` = '" + type_upd + "', `weeks` = '" + week_upd + "',`days` = '" + days_upd + "', `total` = '" + total + "' WHERE `hotelrevers`.`id` = '" + id + "'";
                    int Row = myDB.creatUpdateDelete(sql);
                    if (Row > 0) {
                        tblData.setValueAt(name_upd, select, 1);
                        tblData.setValueAt(surname_upd, select, 2);
                        tblData.setValueAt(type_upd, select, 3);
                        tblData.setValueAt(week_upd, select, 4);
                        tblData.setValueAt(days_upd, select, 5);
                        tblData.setValueAt(total, select, 6);
                        tarResult.setText("ประเภทห้องพัก : " + type_upd + "\n" + "ช่วงที่เข้าพัก : " + week_upd + "\n"
                                + "จำนวนวันเข้าพัก : " + days_upd + " วัน" + "\n" + "รวมราคา : " + total + " บาท");
                    } else {
                        System.out.println(Row);
                    }
                } else if (rdoDeluxe.isSelected()) {
                    type_upd = "Deluxe";
                    if (week_upd == "Weekday (Sun - Thu)") {
                        price = 2290;
                    } else if (week_upd == "Weekend (Fri - Sat)") {
                        price = 2790;
                    } else if (week_upd == "Long Weekend") {//LongWeekend
                        price = 3690;
                    } else {
                        price = 0;

                    }
                    int total = price * days_upd;
                    String sql = "UPDATE `hotelrevers` SET `name` = '" + name_upd + "', `surname` = '" + surname_upd + "',`type` = '" + type_upd + "', `weeks` = '" + week_upd + "',`days` = '" + days_upd + "', `total` = '" + total + "' WHERE `hotelrevers`.`id` = '" + id + "'";
                    int Row = myDB.creatUpdateDelete(sql);
                    if (Row > 0) {
                        tblData.setValueAt(name_upd, select, 1);
                        tblData.setValueAt(surname_upd, select, 2);
                        tblData.setValueAt(type_upd, select, 3);
                        tblData.setValueAt(week_upd, select, 4);
                        tblData.setValueAt(days_upd, select, 5);
                        tblData.setValueAt(total, select, 6);
                        tarResult.setText("ประเภทห้องพัก : " + type_upd + "\n" + "ช่วงที่เข้าพัก : " + week_upd + "\n"
                                + "จำนวนวันเข้าพัก : " + days_upd + " วัน" + "\n" + "รวมราคา : " + total + " บาท");
                    } else {
                        System.out.println(Row);
                    }
                } else if (rdoGrandDeluxe.isSelected()) {
                    type_upd = "Grand Deluxe";
                    if (week_upd == "Weekday (Sun - Thu)") {
                        price = 2890;
                    } else if (week_upd == "Weekend (Fri - Sat)") {
                        price = 4490;
                    } else if (week_upd == "Long Weekend") {//LongWeekend
                        price = 5390;
                    } else {
                        price = 0;

                    }
                    int total = price * days_upd;
                    String sql = "UPDATE `hotelrevers` SET `name` = '" + name_upd + "', `surname` = '" + surname_upd + "',`type` = '" + type_upd + "', `weeks` = '" + week_upd + "',`days` = '" + days_upd + "', `total` = '" + total + "' WHERE `hotelrevers`.`id` = '" + id + "'";
                    int Row = myDB.creatUpdateDelete(sql);
                    if (Row > 0) {
                        tblData.setValueAt(name_upd, select, 1);
                        tblData.setValueAt(surname_upd, select, 2);
                        tblData.setValueAt(type_upd, select, 3);
                        tblData.setValueAt(week_upd, select, 4);
                        tblData.setValueAt(days_upd, select, 5);
                        tblData.setValueAt(total, select, 6);
                        tarResult.setText("ประเภทห้องพัก : " + type_upd + "\n" + "ช่วงที่เข้าพัก : " + week_upd + "\n"
                                + "จำนวนวันเข้าพัก : " + days_upd + " วัน" + "\n" + "รวมราคา : " + total + " บาท");
                    } else {
                        System.out.println(Row);
                    }
                } else if (rdoJuniorSuit.isSelected()) {
                    type_upd = "Junior Suit";
                    if (week_upd == "Weekday (Sun - Thu)") {
                        price = 3190;
                    } else if (week_upd == "Weekend (Fri - Sat)") {
                        price = 3890;
                    } else if (week_upd == "Long Weekend") {//LongWeekend
                        price = 4790;
                    } else {
                        price = 0;

                    }
                    int total = price * days_upd;
                    String sql = "UPDATE `hotelrevers` SET `name` = '" + name_upd + "', `surname` = '" + surname_upd + "',`type` = '" + type_upd + "', `weeks` = '" + week_upd + "',`days` = '" + days_upd + "', `total` = '" + total + "' WHERE `hotelrevers`.`id` = '" + id + "'";
                    int Row = myDB.creatUpdateDelete(sql);
                    if (Row > 0) {
                        tblData.setValueAt(name_upd, select, 1);
                        tblData.setValueAt(surname_upd, select, 2);
                        tblData.setValueAt(type_upd, select, 3);
                        tblData.setValueAt(week_upd, select, 4);
                        tblData.setValueAt(days_upd, select, 5);
                        tblData.setValueAt(total, select, 6);
                        tarResult.setText("ประเภทห้องพัก : " + type_upd + "\n" + "ช่วงที่เข้าพัก : " + week_upd + "\n"
                                + "จำนวนวันเข้าพัก : " + days_upd + " วัน" + "\n" + "รวมราคา : " + total + " บาท");
                    } else {
                        System.out.println(Row);
                    }
                } else if (rdoFamilyJuniorSuit.isSelected()) {
                    type_upd = "Family Junior Suit";
                    if (week_upd == "Weekday (Sun - Thu)") {
                        price = 3990;
                    } else if (week_upd == "Weekend (Fri - Sat)") {
                        price = 4690;
                    } else if (week_upd == "Long Weekend") {//LongWeekend
                        price = 5690;
                    } else {
                        price = 0;

                    }
                    int total = price * days_upd;
                    String sql = "UPDATE `hotelrevers` SET `name` = '" + name_upd + "', `surname` = '" + surname_upd + "',`type` = '" + type_upd + "', `weeks` = '" + week_upd + "',`days` = '" + days_upd + "', `total` = '" + total + "' WHERE `hotelrevers`.`id` = '" + id + "'";
                    int Row = myDB.creatUpdateDelete(sql);
                    if (Row > 0) {
                        tblData.setValueAt(name_upd, select, 1);
                        tblData.setValueAt(surname_upd, select, 2);
                        tblData.setValueAt(type_upd, select, 3);
                        tblData.setValueAt(week_upd, select, 4);
                        tblData.setValueAt(days_upd, select, 5);
                        tblData.setValueAt(total, select, 6);
                        tarResult.setText("ประเภทห้องพัก : " + type_upd + "\n" + "ช่วงที่เข้าพัก : " + week_upd + "\n"
                                + "จำนวนวันเข้าพัก : " + days_upd + " วัน" + "\n" + "รวมราคา : " + total + " บาท");
                    } else {
                        System.out.println(Row);
                    }
                } else if (rdoGrandFamilySuite.isSelected()) {
                    type_upd = "Grand Family Suite";
                    if (week_upd == "Weekday (Sun - Thu)") {
                        price = 4690;
                    } else if (week_upd == "Weekend (Fri - Sat)") {
                        price = 5590;
                    } else if (week_upd == "Long Weekend") {//LongWeekend
                        price = 6490;
                    } else {
                        price = 0;

                    }
                    int total = price * days_upd;
                    String sql = "UPDATE `hotelrevers` SET `name` = '" + name_upd + "', `surname` = '" + surname_upd + "',`type` = '" + type_upd + "', `weeks` = '" + week_upd + "',`days` = '" + days_upd + "', `total` = '" + total + "' WHERE `hotelrevers`.`id` = '" + id + "'";
                    int Row = myDB.creatUpdateDelete(sql);
                    if (Row > 0) {
                        tblData.setValueAt(name_upd, select, 1);
                        tblData.setValueAt(surname_upd, select, 2);
                        tblData.setValueAt(type_upd, select, 3);
                        tblData.setValueAt(week_upd, select, 4);
                        tblData.setValueAt(days_upd, select, 5);
                        tblData.setValueAt(total, select, 6);
                        tarResult.setText("ประเภทห้องพัก : " + type_upd + "\n" + "ช่วงที่เข้าพัก : " + week_upd + "\n"
                                + "จำนวนวันเข้าพัก : " + days_upd + " วัน" + "\n" + "รวมราคา : " + total + " บาท");
                    } else {
                        System.out.println(Row);
                    }
                } else {
                    JOptionPane.showMessageDialog(rootPane, "กรุณาเลือกประเภทห้องพักครับ");
                }

            } else {
                JOptionPane.showMessageDialog(rootPane, "กรุณากรอกข้อมูลให้ครบก่อนครับ");
            }


        } else {
            System.out.println(" ");
        }

    }

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {
        int row = tblData.getSelectedRow();
        String id = tblData.getValueAt(row, 0).toString();
        String sql = "DELETE FROM hotelrevers WHERE `id` = '" + id + "'";
        int delRow = myDB.creatUpdateDelete(sql);

        if (delRow > 0) {
            model.removeRow(row);
//            clearText();
        } else {
            JOptionPane.showMessageDialog(rootPane, "No delete");
        }
    }

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {

    }

    private void btnExit1ActionPerformed(java.awt.event.ActionEvent evt) {

    }

    private void spnDaysKeyTyped(java.awt.event.KeyEvent evt) {
        //
    }

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {
        int price = 0;
        String type = "";
        String id = txtId.getText();
        String name = txtName2.getText();
        String surname = txtSurname2.getText();
        String week = (String) cbxWeek.getSelectedItem();
        int days = (int) spnDays.getValue();
        if (id.length() > 0 && name.length() > 0 && surname.length() > 0 && days != 0
                && cbxWeek.getSelectedIndex() != 0 && buttonGroup1.getSelection() != null) {
            if (rdoSuperior.isSelected()) {
                type = "Superior";
                if (week == "Weekday (Sun - Thu)") {
                    price = 2090;
                } else if (week == "Weekend (Fri - Sat)") {
                    price = 2490;
                } else if (week == "Long Weekend") {//LongWeekend
                    price = 3390;
                } else {
                    price = 0;

                }
            } else if (rdoDeluxe.isSelected()) {
                type = "Deluxe";
                if (week == "Weekday (Sun - Thu)") {
                    price = 2290;
                } else if (week == "Weekend (Fri - Sat)") {
                    price = 2790;
                } else if (week == "Long Weekend") {//LongWeekend
                    price = 3690;
                } else {
                    price = 0;

                }
            } else if (rdoGrandDeluxe.isSelected()) {
                type = "Grand Deluxe";
                if (week == "Weekday (Sun - Thu)") {
                    price = 2890;
                } else if (week == "Weekend (Fri - Sat)") {
                    price = 4490;
                } else if (week == "Long Weekend") {//LongWeekend
                    price = 5390;
                } else {
                    price = 0;

                }
            } else if (rdoJuniorSuit.isSelected()) {
                type = "Junior Suit";
                if (week == "Weekday (Sun - Thu)") {
                    price = 3190;
                } else if (week == "Weekend (Fri - Sat)") {
                    price = 3890;
                } else if (week == "Long Weekend") {//LongWeekend
                    price = 4790;
                } else {
                    price = 0;

                }
            } else if (rdoFamilyJuniorSuit.isSelected()) {
                type = "Family Junior Suit";
                if (week == "Weekday (Sun - Thu)") {
                    price = 3990;
                } else if (week == "Weekend (Fri - Sat)") {
                    price = 4690;
                } else if (week == "Long Weekend") {//LongWeekend
                    price = 5690;
                } else {
                    price = 0;

                }
            } else if (rdoGrandFamilySuite.isSelected()) {
                type = "Grand Family Suite";
                if (week == "Weekday (Sun - Thu)") {
                    price = 4690;
                } else if (week == "Weekend (Fri - Sat)") {
                    price = 5590;
                } else if (week == "Long Weekend") {//LongWeekend
                    price = 6490;
                } else {
                    price = 0;

                }
            } else {
                JOptionPane.showMessageDialog(rootPane, "กรุณาเลือกประเภทห้องพักครับ");
            }
            int total = price * days;
            String rowData[] = {id, name, surname, type, week, String.valueOf(days), String.valueOf(total)};
            model.addRow(rowData);
            String sql = "INSERT INTO `hotelrevers`(`id`, `name`, `surname`, `type`, `weeks`, `days`, `total`) VALUES " +
                    "('" + id + "','" + name + "','" + surname + "','" + type + "','" + week + "','" + days + "','" + total + "')";
            int row = myDB.creatUpdateDelete(sql);
            tarResult.setText("ประเภทห้องพัก : " + type + "\n" + "ช่วงที่เข้าพัก : " + week + "\n"
                    + "จำนวนวันเข้าพัก : " + days + " วัน" + "\n" + "รวมราคา : " + total + " บาท");
        } else {
            JOptionPane.showMessageDialog(rootPane, "กรุณากรอกข้อมูลให้ครบก่อนครับ");
        }

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HotelRevers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HotelRevers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HotelRevers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HotelRevers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new HotelRevers().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnExit1;
    private javax.swing.JButton btnUpdate;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> cbxType;
    private javax.swing.JComboBox<String> cbxType1;
    private javax.swing.JComboBox<String> cbxWeek;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JRadioButton rdoDeluxe;
    private javax.swing.JRadioButton rdoFamilyJuniorSuit;
    private javax.swing.JRadioButton rdoGrandDeluxe;
    private javax.swing.JRadioButton rdoGrandFamilySuite;
    private javax.swing.JRadioButton rdoJuniorSuit;
    private javax.swing.JRadioButton rdoSuperior;
    private javax.swing.JSpinner spnDays;
    private javax.swing.JTextArea tarResult;
    private javax.swing.JTable tblData;
    private javax.swing.JTextField txtAccNum;
    private javax.swing.JTextField txtAccNum1;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtName1;
    private javax.swing.JTextField txtName2;
    private javax.swing.JTextField txtOpen;
    private javax.swing.JTextField txtOpen1;
    private javax.swing.JTextField txtSurname;
    private javax.swing.JTextField txtSurname1;
    private javax.swing.JTextField txtSurname2;
    // End of variables declaration
}

